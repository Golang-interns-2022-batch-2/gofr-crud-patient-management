// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/punitj12/patient-app-gofr/internal/stores (interfaces: PatientStorer)

// Package stores is a generated GoMock package.
package stores

import (
	gofr "developer.zopsmart.com/go/gofr/pkg/gofr"
	gomock "github.com/golang/mock/gomock"
	models "github.com/punitj12/patient-app-gofr/internal/models"
	reflect "reflect"
)

// MockPatientStorer is a mock of PatientStorer interface
type MockPatientStorer struct {
	ctrl     *gomock.Controller
	recorder *MockPatientStorerMockRecorder
}

// MockPatientStorerMockRecorder is the mock recorder for MockPatientStorer
type MockPatientStorerMockRecorder struct {
	mock *MockPatientStorer
}

// NewMockPatientStorer creates a new mock instance
func NewMockPatientStorer(ctrl *gomock.Controller) *MockPatientStorer {
	mock := &MockPatientStorer{ctrl: ctrl}
	mock.recorder = &MockPatientStorerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockPatientStorer) EXPECT() *MockPatientStorerMockRecorder {
	return m.recorder
}

// Create mocks base method
func (m *MockPatientStorer) Create(arg0 *gofr.Context, arg1 *models.Patient) (*models.Patient, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0, arg1)
	ret0, _ := ret[0].(*models.Patient)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create
func (mr *MockPatientStorerMockRecorder) Create(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockPatientStorer)(nil).Create), arg0, arg1)
}

// Delete mocks base method
func (m *MockPatientStorer) Delete(arg0 *gofr.Context, arg1 int) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete
func (mr *MockPatientStorerMockRecorder) Delete(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockPatientStorer)(nil).Delete), arg0, arg1)
}

// Get mocks base method
func (m *MockPatientStorer) Get(arg0 *gofr.Context, arg1 int) (*models.Patient, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0, arg1)
	ret0, _ := ret[0].(*models.Patient)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get
func (mr *MockPatientStorerMockRecorder) Get(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockPatientStorer)(nil).Get), arg0, arg1)
}

// GetAll mocks base method
func (m *MockPatientStorer) GetAll(arg0 *gofr.Context) ([]*models.Patient, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAll", arg0)
	ret0, _ := ret[0].([]*models.Patient)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAll indicates an expected call of GetAll
func (mr *MockPatientStorerMockRecorder) GetAll(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAll", reflect.TypeOf((*MockPatientStorer)(nil).GetAll), arg0)
}

// Update mocks base method
func (m *MockPatientStorer) Update(arg0 *gofr.Context, arg1 *models.Patient) (*models.Patient, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Update", arg0, arg1)
	ret0, _ := ret[0].(*models.Patient)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Update indicates an expected call of Update
func (mr *MockPatientStorerMockRecorder) Update(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockPatientStorer)(nil).Update), arg0, arg1)
}
