{
  "openapi": "3.0.1",
  "info": {
    "title": "Patient Management System",
    "description": "This is PMS where we can Create, Update, Delete and Fetch patients from database",
    "termsOfService": "http://patient.io/terms/",
    "contact": {
      "email": "apiteam@patient.io"
    },
    "license": {
      "name": "Apache 2.0"
    },
    "version": "1.0.0"
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  },
  "servers": [
    {
      "url": "http://localhost:8080/"
    }
  ],
  "tags": [
    {
      "name": "patient",
      "description": "Details about Patients",
      "externalDocs": {
        "description": "Find out more",
        "url": "http://patient.io"
      }
    }
  ],
  "paths": {
    "/patients": {
      "get": {
        "tags": [
          "patient"
        ],
        "summary": "Get all existing patients",
        "operationId": "getPatients",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Get"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 400,
                  "status": "ERROR",
                  "message": "Bad Request"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "status": "ERROR",
                  "message": "Page Not Found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "status": "ERROR",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "patient"
        ],
        "summary": "Add a new patient to the database",
        "description": "adding patient to database",
        "operationId": "addPatient",
        "requestBody": {
          "description": "Patient object that needs to be added to the database",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 400,
                  "status": "ERROR",
                  "message": "Bad Request"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "status": "ERROR",
                  "message": "Page Not Found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "status": "ERROR",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/patients/{patientId}": {
      "get": {
        "tags": [
          "patient"
        ],
        "summary": "Get patient by ID",
        "description": "Returns a single patient",
        "operationId": "getPatientById",
        "parameters": [
          {
            "name": "patientId",
            "in": "path",
            "description": "ID of patient to return",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 400,
                  "status": "ERROR",
                  "message": "Bad Request"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "status": "ERROR",
                  "message": "Page Not Found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "status": "ERROR",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "patient"
        ],
        "summary": "Updates a pet in the store with form data",
        "description": "updating patient",
        "operationId": "updatePatientById",
        "parameters": [
          {
            "name": "patientId",
            "in": "path",
            "description": "ID of patient that needs to be updated",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Patient Details that needs to be updated",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSchema"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 400,
                  "status": "ERROR",
                  "message": "Bad Request"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "status": "ERROR",
                  "message": "Page Not Found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "status": "ERROR",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "payload"
      },
      "delete": {
        "tags": [
          "patient"
        ],
        "summary": "Deletes a patient",
        "operationId": "deletePatientById",
        "parameters": [
          {
            "name": "patientId",
            "in": "path",
            "description": "Patient id to delete",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Delete"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 400,
                  "status": "ERROR",
                  "message": "Bad Request"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "status": "ERROR",
                  "message": "Page Not Found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "status": "ERROR",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Patient": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "John"
          },
          "phone": {
            "type": "string",
            "example": 919234591749
          },
          "discharged": {
            "type": "boolean",
            "example": true
          },
          "createdAt": {
            "type": "string",
            "example": "2022-02-21T13:23:22.000Z"
          },
          "updatedAt": {
            "type": "string",
            "example": "2022-02-21T13:23:22.000Z"
          },
          "bloodGroup": {
            "type": "string",
            "example": "+A"
          },
          "description": {
            "type": "string",
            "example": "patient discharged"
          }
        }
      },
      "UpdateSchema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "John"
          },
          "description": {
            "type": "string",
            "example": "patient discharged"
          }
        }
      },
      "PostSchema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "John"
          },
          "phone": {
            "type": "string",
            "example": 919234591749
          },
          "discharged": {
            "type": "boolean",
            "example": true
          },
          "bloodGroup": {
            "type": "string",
            "example": "+A"
          },
          "description": {
            "type": "string",
            "example": "patient discharged"
          }
        }
      },
      "Delete": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "example": 200
          },
          "status": {
            "type": "string",
            "example": "SUCCESS"
          },
          "data": {
            "type": "string",
            "example": "Patient deleted successfully."
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer"
          },
          "status": {
            "type": "string"
          },
          "Message": {
            "type": "string"
          }
        }
      },
      "Get": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer"
          },
          "status": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "properties": {
              "patient": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Patient"
                }
              }
            }
          }
        }
      },
      "Response": {
        "type": "object",
        "properties": {
          "code": {
            "type": "object",
            "example": "200"
          },
          "status": {
            "type": "string",
            "example": "SUCCESS"
          },
          "data": {
            "type": "object",
            "properties": {
              "patient": {
                "$ref": "#/components/schemas/Patient"
              }
            }
          }
        }
      }
    }
  }
}